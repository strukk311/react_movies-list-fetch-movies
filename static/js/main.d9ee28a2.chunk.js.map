{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","getMovies","title","a","fetch","response","json","FindMovie","addMovie","useState","setTitle","setMovie","error","setError","sendRequest","movieFromServer","current","htmlFor","type","id","placeholder","value","onChange","event","target","onClick","disabled","App","setMovies","useCallback","newMovie","some","alert","ReactDOM","render","document","getElementById"],"mappings":"8TAOaA,EAA6B,SAACC,GACzC,IAAQC,EAAUD,EAAVC,MAER,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAKF,EAAMG,OACXC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,SAA2BD,EAAMK,aAIrC,sBAAKJ,UAAU,UAAf,UACGD,EAAMM,KACP,iCC7BGC,EAA8B,SAACR,GAC1C,IAAQS,EAAWT,EAAXS,OAER,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,uBCbRC,G,MAAS,uCAAG,WAAOC,GAAP,eAAAC,EAAA,sEACAC,MAAM,GAAD,OAHd,wDAGc,aAAgBF,IADrB,cACjBG,EADiB,yBAGhBA,EAASC,QAHO,2CAAH,uDCOTC,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAA0BC,mBAAS,IAAnC,mBAAOP,EAAP,KAAcQ,EAAd,KACA,EAA0BD,mBAAS,MAAnC,mBAAOnB,EAAP,KAAcqB,EAAd,KACA,EAA0BF,oBAAS,GAAnC,mBAAOG,EAAP,KAAcC,EAAd,KAEMC,EAAW,uCAAG,4BAAAX,EAAA,sEACYF,EAAUC,GADtB,YACZa,EADY,QAGEpB,MAHF,yCAITgB,EAASI,IAJA,gCAOXF,GAAS,SAAAG,GAAO,OAAKA,MAPV,2CAAH,qDAUjB,OACE,qCACE,uBACEzB,UAAU,aADZ,UAGE,sBAAKA,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQ0B,QAAQ,cAAjC,yBAIA,qBAAK1B,UAAU,UAAf,SACE,uBACE2B,KAAK,OACLC,GAAG,cACHC,YAAY,0BACZ7B,UAAU,QACV8B,MAAOnB,EACPoB,SAAU,SAACC,GACTV,GAAS,GACTH,EAASa,EAAMC,OAAOH,YAK3BT,GACC,mBAAGrB,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACE2B,KAAK,SACL3B,UAAU,kBACVkC,QAASX,EAHX,4BASF,qBAAKvB,UAAU,UAAf,SACE,wBACE2B,KAAK,SACL3B,UAAU,oBACVmC,UAAWpC,EACXmC,QAAS,WACHnC,IACFkB,EAASlB,GACToB,EAAS,MAPf,qCAiBN,sBAAKnB,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACCD,GACC,cAAC,EAAD,CACEA,MAAOA,WCnFNqC,EAAgB,WAC3B,MAA4BlB,mBAAuB,IAAnD,mBAAOX,EAAP,KAAe8B,EAAf,KAEMpB,EAAWqB,uBAAY,SAACC,GACvBhC,EAAOiC,MAAK,SAAAzC,GAAK,OAAIA,EAAMU,SAAW8B,EAAS9B,UAGlDgC,MAAM,gCAFNJ,EAAU,GAAD,mBAAK9B,GAAL,CAAagC,OAIvB,CAAChC,IAEJ,OACE,sBAAKP,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACGO,GACC,cAAC,EAAD,CACEA,OAAQA,MAId,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CACEiB,SAAUA,UCvBpByB,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.d9ee28a2.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const API_URL = 'https://www.omdbapi.com/?i=tt3896198&apikey=1b498e6e&';\n\nexport const getMovies = async (title: string) => {\n  const response = await fetch(`${API_URL}t=${title}`);\n\n  return response.json();\n};\n","import React, { useState } from 'react';\nimport './FindMovie.scss';\nimport { getMovies } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void;\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [title, setTitle] = useState('');\n  const [movie, setMovie] = useState(null);\n  const [error, setError] = useState(false);\n\n  const sendRequest = async () => {\n    const movieFromServer = await getMovies(title);\n\n    if (movieFromServer.Title) {\n      return setMovie(movieFromServer);\n    }\n\n    return setError(current => !current);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input\"\n              value={title}\n              onChange={(event) => {\n                setError(false);\n                setTitle(event.target.value);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-light\"\n              onClick={sendRequest}\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              disabled={!movie}\n              onClick={() => {\n                if (movie) {\n                  addMovie(movie);\n                  setTitle('');\n                }\n              }}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movie && (\n          <MovieCard\n            movie={movie}\n          />\n        )}\n      </div>\n    </>\n  );\n};\n","import React, { useState, useCallback } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[] | []>([]);\n\n  const addMovie = useCallback((newMovie: Movie) => {\n    if (!movies.some(movie => movie.imdbID === newMovie.imdbID)) {\n      setMovies([...movies, newMovie]);\n    } else {\n      alert('Film is already in the list!'); // eslint-disable-line\n    }\n  }, [movies]);\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        {movies && (\n          <MoviesList\n            movies={movies}\n          />\n        )}\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie\n          addMovie={addMovie}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}